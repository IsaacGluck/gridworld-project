Jim Yuan
<https://github.com/IsaacGluck/gw45-psychic-octo-meme>
APCS pd 8
HW34 -- GridWorld, Part 4
2014-04-29

Set 7
 1. What methods are implemented in Critter?
 	act(), getActors(), processActors(ArrayList<Actor> acotrs), getMoveLocations(), selectMoveLocation(ArrayList<Location> locs), makeMove(Location loc) 

 2. What are the five basic actions common to all critters when they act?
 	Getting a list of other actors, processing that list, getting locations to move to, selectiong one of them, and moving to the selected location
 3.Should subclasses of Critter override the getActors method? Explain.
 	Only if they wish to get actors that are not directly neighboring them.

 4. Describe three ways that a critter could process actors.
 	New actors could be added to blank spaces, existing actors could be removed, or existing actors could be replaced.
 
 5. What three methods must be invoked to make a critter move? Explain each of these methods.
 	getMoveLocations(), selectMoveLocation(ArrayList<Location> locs), and makeMove(Location loc)

 6. Why is there no Critter constructor?
 	It does not contain instance variables that need to be set up nor does it take any user input.


Set 8
1. Because some of the methods that act calls such as processActors and makeMove are overwritten in ChameleonCritter and serve a different purpose.


2. Because all it wants to do is just change the direction, but then it can call all the built in makeMove funcitons in the Critter class.

3.Save the current location in a variable, and then create a flower and add it to this locaiton. (SAme as in Bug class)

4. It wants to use the same behavior as Crriter

5. The Actor class

6. It can use getGrid(). It gets it from Actor (inherited).


Do You Know?
Set 9
//Jim's part; could not open anything gridworld //related: "could not find or load main class" //error

1.CrabCritter doesn't override the processActors method because it inherits the method with its functionality from the Critter class it extends.

2.First, it finds the Actors in front of it, and it it finds any it will eat them. Then it will move. If it doesn't move, it'll turn randomly left or right, so likely at that point, the crab will be able to move, and won't keep eating adjacent Actors.

3.The getLocationsInDirections method is used in CrabCritter because the CrabCritter has to know exactly where it can move and if there are nom-noms to eat at those locations.

4.(4,3);(4,4);(4,5)

5.A Critter looks at all neighboring grid locations, and picks up an object; meanwhile, a CrabCritter will eliminate an Actor(s). However, they are similar in that they remove an Actor from its original location.

6.A CrabCritter determines when it turns instead of moving randomly.

7.The CrabCritter objects don't eat each other because in the Critter's processActors method, it makes an special case, that CrabCritter shall not eat rocks or other Critters.